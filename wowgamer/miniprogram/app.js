"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resources_1 = require("./utils/resources");
App({
    globalData: {
        RootURL: 'http://www.5mlf.cn/',
        URL: 'http://www.5mlf.cn/warcraft/a/api',
        isAuthorized: false,
        userInfo: { avatarUrl: '', city: '', country: '', gender: 0, language: 'zh_CN', nickName: '', province: '' },
        StatusBar: 0,
        Custom: { bottom: 0, height: 0, left: 0, right: 0, top: 0, width: 0 },
        CustomBar: 0,
        WindowHeight: 0,
        ScreenHeight: 0
    },
    onLaunch: function () {
        const userInfo = wx.getStorageSync('userInfo');
        if (userInfo != '') {
            this.globalData.userInfo = userInfo;
        }
        wx.getSystemInfo({
            success: e => {
                this.globalData.StatusBar = e.statusBarHeight;
                let custom = wx.getMenuButtonBoundingClientRect();
                this.globalData.Custom = custom;
                this.globalData.CustomBar = custom.bottom + custom.top - e.statusBarHeight;
                this.globalData.WindowHeight = e.windowHeight;
                this.globalData.ScreenHeight = e.screenHeight;
            }
        });
    },
    requestFuncPromise: function (api, data, method) {
        var promise = new Promise((resolve, reject) => {
            wx.request({
                url: this.globalData.URL + api,
                data: data,
                header: {
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                method: method,
                success: res => resolve(res),
                fail: err => reject(err)
            });
        });
        return promise;
    },
    requestFunc: function (api, data, method, successfn, failfn) {
        wx.request({
            url: this.globalData.URL + api,
            data: data,
            header: {
                "Content-Type": "application/x-www-form-urlencoded"
            },
            method: method,
            success: successfn,
            fail: failfn
        });
    },
    getResourcePath: function (name, type) {
        return resources_1.getResources(name, type);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsaURBQWlEO0FBRWpELEdBQUcsQ0FBYTtJQUNkLFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsR0FBRyxFQUFFLG1DQUFtQztRQUd4QyxZQUFZLEVBQUUsS0FBSztRQUNuQixRQUFRLEVBQUUsRUFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFDO1FBQzFHLFNBQVMsRUFBRSxDQUFDO1FBQ1osTUFBTSxFQUFFLEVBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUM7UUFDbkUsU0FBUyxFQUFFLENBQUM7UUFDWixZQUFZLEVBQUUsQ0FBQztRQUNmLFlBQVksRUFBRSxDQUFDO0tBQ2hCO0lBQ0QsUUFBUSxFQUFFO1FBRVIsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUMvQyxJQUFHLFFBQVEsSUFBSSxFQUFFLEVBQUU7WUFDakIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFBO1NBQ3BDO1FBQ0QsRUFBRSxDQUFDLGFBQWEsQ0FBQztZQUNmLE9BQU8sRUFBRSxDQUFDLENBQUMsRUFBRTtnQkFDWCxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsZUFBZSxDQUFDO2dCQUM5QyxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUMsK0JBQStCLEVBQUUsQ0FBQztnQkFDbEQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO2dCQUNoQyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLGVBQWUsQ0FBQztnQkFDM0UsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztnQkFDOUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUNoRCxDQUFDO1NBQ0YsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUNELGtCQUFrQixFQUFFLFVBQVUsR0FBRyxFQUFFLElBQUksRUFBRSxNQUFNO1FBQzdDLElBQUksT0FBTyxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQzVDLEVBQUUsQ0FBQyxPQUFPLENBQUM7Z0JBQ1QsR0FBRyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxHQUFFLEdBQUc7Z0JBQzdCLElBQUksRUFBRSxJQUFJO2dCQUNWLE1BQU0sRUFBRTtvQkFDTixjQUFjLEVBQUUsbUNBQW1DO2lCQUNwRDtnQkFDRCxNQUFNLEVBQUUsTUFBTTtnQkFDZCxPQUFPLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO2dCQUM1QixJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO2FBQ3pCLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFBO1FBQ0YsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztJQUNELFdBQVcsRUFBRSxVQUFVLEdBQUcsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNO1FBQ3pELEVBQUUsQ0FBQyxPQUFPLENBQUM7WUFDVCxHQUFHLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEdBQUUsR0FBRztZQUM3QixJQUFJLEVBQUUsSUFBSTtZQUNWLE1BQU0sRUFBRTtnQkFDTixjQUFjLEVBQUUsbUNBQW1DO2FBQ3BEO1lBQ0QsTUFBTSxFQUFFLE1BQU07WUFDZCxPQUFPLEVBQUUsU0FBUztZQUNsQixJQUFJLEVBQUUsTUFBTTtTQUNiLENBQUMsQ0FBQztJQUNMLENBQUM7SUFDRCxlQUFlLEVBQUUsVUFBVSxJQUFJLEVBQUUsSUFBSTtRQUNuQyxPQUFPLHdCQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7Q0FDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBhcHAudHNcclxuaW1wb3J0IHsgZ2V0UmVzb3VyY2VzIH0gZnJvbSBcIi4vdXRpbHMvcmVzb3VyY2VzXCI7XHJcblxyXG5BcHA8SUFwcE9wdGlvbj4oe1xyXG4gIGdsb2JhbERhdGE6IHtcclxuICAgIFJvb3RVUkw6ICdodHRwOi8vd3d3LjVtbGYuY24vJyxcclxuICAgIFVSTDogJ2h0dHA6Ly93d3cuNW1sZi5jbi93YXJjcmFmdC9hL2FwaScsXHJcbiAgICAvLyBVUkw6ICdodHRwOi8vMzkuMTAwLjM3LjEwNDo4OTgwL3dhcmNyYWZ0L2EvYXBpJyxcclxuICAgIC8vIFJvb3RVUkw6ICdodHRwOi8vMzkuMTAwLjM3LjEwNDo4OTgwLycsXHJcbiAgICBpc0F1dGhvcml6ZWQ6IGZhbHNlLFxyXG4gICAgdXNlckluZm86IHthdmF0YXJVcmw6ICcnLCBjaXR5OiAnJywgY291bnRyeTogJycsIGdlbmRlcjogMCwgbGFuZ3VhZ2U6ICd6aF9DTicsIG5pY2tOYW1lOiAnJywgcHJvdmluY2U6ICcnfSxcclxuICAgIFN0YXR1c0JhcjogMCxcclxuICAgIEN1c3RvbToge2JvdHRvbTogMCwgaGVpZ2h0OiAwLCBsZWZ0OiAwLCByaWdodDogMCwgdG9wOiAwLCB3aWR0aDogMH0sXHJcbiAgICBDdXN0b21CYXI6IDAsXHJcbiAgICBXaW5kb3dIZWlnaHQ6IDAsXHJcbiAgICBTY3JlZW5IZWlnaHQ6IDBcclxuICB9LFxyXG4gIG9uTGF1bmNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyDnmbvlvZVcclxuICAgIGNvbnN0IHVzZXJJbmZvID0gd3guZ2V0U3RvcmFnZVN5bmMoJ3VzZXJJbmZvJyk7XHJcbiAgICBpZih1c2VySW5mbyAhPSAnJykge1xyXG4gICAgICB0aGlzLmdsb2JhbERhdGEudXNlckluZm8gPSB1c2VySW5mb1xyXG4gICAgfVxyXG4gICAgd3guZ2V0U3lzdGVtSW5mbyh7XHJcbiAgICAgIHN1Y2Nlc3M6IGUgPT4ge1xyXG4gICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5TdGF0dXNCYXIgPSBlLnN0YXR1c0JhckhlaWdodDtcclxuICAgICAgICBsZXQgY3VzdG9tID0gd3guZ2V0TWVudUJ1dHRvbkJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5DdXN0b20gPSBjdXN0b207ICBcclxuICAgICAgICB0aGlzLmdsb2JhbERhdGEuQ3VzdG9tQmFyID0gY3VzdG9tLmJvdHRvbSArIGN1c3RvbS50b3AgLSBlLnN0YXR1c0JhckhlaWdodDtcclxuICAgICAgICB0aGlzLmdsb2JhbERhdGEuV2luZG93SGVpZ2h0ID0gZS53aW5kb3dIZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5nbG9iYWxEYXRhLlNjcmVlbkhlaWdodCA9IGUuc2NyZWVuSGVpZ2h0O1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gIH0sXHJcbiAgcmVxdWVzdEZ1bmNQcm9taXNlOiBmdW5jdGlvbiAoYXBpLCBkYXRhLCBtZXRob2QpIHtcclxuICAgIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICB3eC5yZXF1ZXN0KHtcclxuICAgICAgICB1cmw6IHRoaXMuZ2xvYmFsRGF0YS5VUkwgK2FwaSxcclxuICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgIGhlYWRlcjoge1xyXG4gICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWV0aG9kOiBtZXRob2QsXHJcbiAgICAgICAgc3VjY2VzczogcmVzID0+IHJlc29sdmUocmVzKSxcclxuICAgICAgICBmYWlsOiBlcnIgPT4gcmVqZWN0KGVycilcclxuICAgICAgfSk7XHJcbiAgICB9KVxyXG4gICAgcmV0dXJuIHByb21pc2U7XHJcbiAgfSxcclxuICByZXF1ZXN0RnVuYzogZnVuY3Rpb24gKGFwaSwgZGF0YSwgbWV0aG9kLCBzdWNjZXNzZm4sIGZhaWxmbikge1xyXG4gICAgd3gucmVxdWVzdCh7XHJcbiAgICAgIHVybDogdGhpcy5nbG9iYWxEYXRhLlVSTCArYXBpLFxyXG4gICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICBoZWFkZXI6IHtcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiXHJcbiAgICAgIH0sXHJcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxyXG4gICAgICBzdWNjZXNzOiBzdWNjZXNzZm4sXHJcbiAgICAgIGZhaWw6IGZhaWxmblxyXG4gICAgfSk7XHJcbiAgfSxcclxuICBnZXRSZXNvdXJjZVBhdGg6IGZ1bmN0aW9uIChuYW1lLCB0eXBlKSB7XHJcbiAgICByZXR1cm4gZ2V0UmVzb3VyY2VzKG5hbWUsIHR5cGUpO1xyXG4gIH1cclxufSkiXX0=