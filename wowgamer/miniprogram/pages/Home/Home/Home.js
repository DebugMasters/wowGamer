"use strict";
var app = getApp();
Page({
    data: {
        userInfo: {},
        hasUserInfo: false,
        canIUse: wx.canIUse('button.open-type.getUserInfo'),
        showAuthorizedWindow: true,
        articleList: [],
        carouselList: [],
        notificationList: ['AAA']
    },
    onLoad: function (options) {
        var _this_1 = this;
        if (app.globalData.userInfo) {
            this.setData({
                userInfo: app.globalData.userInfo,
                hasUserInfo: true,
            });
        }
        else if (this.data.canIUse) {
            app.userInfoReadyCallback = function (res) {
                _this_1.setData({
                    userInfo: res.userInfo,
                    hasUserInfo: true,
                });
                if (_this_1.data.hasUserInfo && _this_1.data.canIUse) {
                    _this_1.setData({
                        showAuthorizedWindow: false
                    });
                    _this_1.getIndexInfo();
                }
            };
        }
        else {
            wx.getUserInfo({
                success: function (res) {
                    app.globalData.userInfo = res.userInfo;
                    _this_1.setData({
                        userInfo: res.userInfo,
                        hasUserInfo: true,
                    });
                },
            });
        }
        if (this.data.hasUserInfo && this.data.canIUse) {
            this.setData({
                showAuthorizedWindow: false
            });
        }
    },
    getIndexInfo: function () {
        var _this_1 = this;
        app.requestFunc('/system/getIndexInfo', {}, 'GET', function (res) {
            console.log(res.data);
            if (res.data.success == true) {
                _this_1.setData({
                    carouselList: res.data.carouselList,
                    articleList: res.data.articleList,
                });
            }
        });
    },
    navToMy: function () {
        wx.switchTab({
            url: '../../My/My/My'
        });
    },
    getUserInfo: function (e) {
        var _this = this;
        console.log(e);
        app.globalData.userInfo = e.detail.userInfo;
        this.setData({
            userInfo: e.detail.userInfo,
            hasUserInfo: true,
        });
        wx.login({
            success: function (res) {
                console.log(res);
                wx.request({
                    url: app.globalData.URL + '/user/login',
                    data: {
                        code: res.code,
                        image: e.detail.userInfo.avatarUrl,
                        userName: e.detail.userInfo.nickName,
                    },
                    header: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    method: 'POST',
                    success: function (result) {
                        console.log(result.data);
                        wx.setStorageSync('id', result.data.userId);
                        console.log(wx.getStorageSync('id'));
                        _this.setData({
                            showAuthorizedWindow: false
                        });
                        _this.getIndexInfo();
                    }
                });
            }
        });
    },
    hideAuthorizedWindow: function () {
        this.setData({
            showAuthorizedWindow: false
        });
    }
});
//# sourceMappingURL=data:application/json;base64,