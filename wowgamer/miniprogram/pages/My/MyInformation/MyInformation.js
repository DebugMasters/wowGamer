"use strict";
const app = getApp();
Page({
    data: {
        userId: '',
        userName: '',
        userImage: '',
        account: '',
        password: '',
        mobile: '',
        showPassword: false,
        accountPassword: '',
    },
    onLoad: function (options) {
        this.setData({
            userId: options.id,
        });
    },
    onShow: function () {
        app.requestFunc('/user/getUserInfo', { userId: this.data.userId }, 'GET', res => {
            console.log(res.data);
            if (res.data.success == true) {
                this.setData({
                    userName: res.data.userInfo.userName,
                    userImage: res.data.userInfo.image,
                    account: res.data.userInfo.gameAccount,
                    password: res.data.userInfo.gamePassword,
                    mobile: res.data.userInfo.mobile,
                });
            }
        });
    },
    ShowPassword() {
        this.setData({
            showPassword: !this.data.showPassword
        });
    },
    inputPassword(e) {
        this.setData({
            password: e.detail.value
        });
    },
    formSubmit: function (e) {
        let detailData = {
            userId: this.data.userId,
            account: e.detail.value.account,
            password: e.detail.value.password,
            mobile: e.detail.value.mobile
        };
        app.requestFunc('/user/saveUserInfo', detailData, 'POST', res => {
            console.log(res.data);
            if (res.data.success == true) {
                wx.showToast({
                    title: res.data.msg,
                    icon: 'success',
                    duration: 1000
                });
                wx.navigateBack({
                    delta: 1
                });
            }
            else {
                wx.showToast({
                    title: res.data.msg,
                    icon: 'none',
                    duration: 1000
                });
            }
        });
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTXlJbmZvcm1hdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk15SW5mb3JtYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUVBLE1BQU0sR0FBRyxHQUFHLE1BQU0sRUFBYyxDQUFBO0FBRWhDLElBQUksQ0FBQztJQUNILElBQUksRUFBRTtRQUNKLE1BQU0sRUFBRSxFQUFFO1FBQ1YsUUFBUSxFQUFFLEVBQUU7UUFDWixTQUFTLEVBQUUsRUFBRTtRQUNiLE9BQU8sRUFBRSxFQUFFO1FBQ1gsUUFBUSxFQUFFLEVBQUU7UUFDWixNQUFNLEVBQUUsRUFBRTtRQUNWLFlBQVksRUFBRSxLQUFLO1FBQ25CLGVBQWUsRUFBRSxFQUFFO0tBQ3BCO0lBQ0QsTUFBTSxFQUFFLFVBQVUsT0FBTztRQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsTUFBTSxFQUFFLE9BQU8sQ0FBQyxFQUFFO1NBQ25CLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxNQUFNLEVBQUU7UUFDTixHQUFHLENBQUMsV0FBVyxDQUFDLG1CQUFtQixFQUFFLEVBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFDLEVBQUUsS0FBSyxFQUFFLEdBQUcsQ0FBQyxFQUFFO1lBQzVFLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3RCLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxFQUFFO2dCQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDO29CQUNYLFFBQVEsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRO29CQUNwQyxTQUFTLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSztvQkFDbEMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVc7b0JBQ3RDLFFBQVEsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZO29CQUN4QyxNQUFNLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTTtpQkFDakMsQ0FBQyxDQUFBO2FBQ0g7UUFDSCxDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxZQUFZO1FBQ1YsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLFlBQVksRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWTtTQUN0QyxDQUFDLENBQUE7SUFDSixDQUFDO0lBQ0QsYUFBYSxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsUUFBUSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSztTQUN6QixDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsVUFBVSxFQUFFLFVBQVMsQ0FBTTtRQUN6QixJQUFJLFVBQVUsR0FBRztZQUNmLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU07WUFDeEIsT0FBTyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU87WUFDL0IsUUFBUSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVE7WUFDakMsTUFBTSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU07U0FDOUIsQ0FBQTtRQUVELEdBQUcsQ0FBQyxXQUFXLENBQUMsb0JBQW9CLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsRUFBRTtZQUM5RCxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN0QixJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksRUFBRTtnQkFDNUIsRUFBRSxDQUFDLFNBQVMsQ0FBQztvQkFDWCxLQUFLLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHO29CQUNuQixJQUFJLEVBQUUsU0FBUztvQkFDZixRQUFRLEVBQUUsSUFBSTtpQkFDZixDQUFDLENBQUE7Z0JBQ0YsRUFBRSxDQUFDLFlBQVksQ0FBQztvQkFDZCxLQUFLLEVBQUUsQ0FBQztpQkFDVCxDQUFDLENBQUE7YUFDSDtpQkFBTTtnQkFDTCxFQUFFLENBQUMsU0FBUyxDQUFDO29CQUNYLEtBQUssRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUc7b0JBQ25CLElBQUksRUFBRSxNQUFNO29CQUNaLFFBQVEsRUFBRSxJQUFJO2lCQUNmLENBQUMsQ0FBQTthQUNIO1FBQ0gsQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDO0NBQ0YsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW5kZXgudHNcbi8vIOiOt+WPluW6lOeUqOWunuS+i1xuY29uc3QgYXBwID0gZ2V0QXBwPElBcHBPcHRpb24+KClcblxuUGFnZSh7XG4gIGRhdGE6IHtcbiAgICB1c2VySWQ6ICcnLFxuICAgIHVzZXJOYW1lOiAnJyxcbiAgICB1c2VySW1hZ2U6ICcnLFxuICAgIGFjY291bnQ6ICcnLFxuICAgIHBhc3N3b3JkOiAnJyxcbiAgICBtb2JpbGU6ICcnLFxuICAgIHNob3dQYXNzd29yZDogZmFsc2UsXG4gICAgYWNjb3VudFBhc3N3b3JkOiAnJyxcbiAgfSxcbiAgb25Mb2FkOiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICB1c2VySWQ6IG9wdGlvbnMuaWQsXG4gICAgfSlcbiAgfSxcblxuICBvblNob3c6IGZ1bmN0aW9uICgpIHtcbiAgICBhcHAucmVxdWVzdEZ1bmMoJy91c2VyL2dldFVzZXJJbmZvJywge3VzZXJJZDogdGhpcy5kYXRhLnVzZXJJZH0sICdHRVQnLCByZXMgPT4ge1xuICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpO1xuICAgICAgaWYgKHJlcy5kYXRhLnN1Y2Nlc3MgPT0gdHJ1ZSkge1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgIHVzZXJOYW1lOiByZXMuZGF0YS51c2VySW5mby51c2VyTmFtZSxcbiAgICAgICAgICB1c2VySW1hZ2U6IHJlcy5kYXRhLnVzZXJJbmZvLmltYWdlLFxuICAgICAgICAgIGFjY291bnQ6IHJlcy5kYXRhLnVzZXJJbmZvLmdhbWVBY2NvdW50LFxuICAgICAgICAgIHBhc3N3b3JkOiByZXMuZGF0YS51c2VySW5mby5nYW1lUGFzc3dvcmQsXG4gICAgICAgICAgbW9iaWxlOiByZXMuZGF0YS51c2VySW5mby5tb2JpbGUsXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcbiAgfSxcblxuICBTaG93UGFzc3dvcmQoKSB7XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIHNob3dQYXNzd29yZDogIXRoaXMuZGF0YS5zaG93UGFzc3dvcmRcbiAgICB9KVxuICB9LFxuICBpbnB1dFBhc3N3b3JkKGUpIHtcbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgcGFzc3dvcmQ6IGUuZGV0YWlsLnZhbHVlXG4gICAgfSlcbiAgfSxcblxuICBmb3JtU3VibWl0OiBmdW5jdGlvbihlOiBhbnkpIHtcbiAgICBsZXQgZGV0YWlsRGF0YSA9IHtcbiAgICAgIHVzZXJJZDogdGhpcy5kYXRhLnVzZXJJZCxcbiAgICAgIGFjY291bnQ6IGUuZGV0YWlsLnZhbHVlLmFjY291bnQsXG4gICAgICBwYXNzd29yZDogZS5kZXRhaWwudmFsdWUucGFzc3dvcmQsXG4gICAgICBtb2JpbGU6IGUuZGV0YWlsLnZhbHVlLm1vYmlsZVxuICAgIH1cbiAgICBcbiAgICBhcHAucmVxdWVzdEZ1bmMoJy91c2VyL3NhdmVVc2VySW5mbycsIGRldGFpbERhdGEsICdQT1NUJywgcmVzID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTtcbiAgICAgIGlmIChyZXMuZGF0YS5zdWNjZXNzID09IHRydWUpIHtcbiAgICAgICAgd3guc2hvd1RvYXN0KHtcbiAgICAgICAgICB0aXRsZTogcmVzLmRhdGEubXNnLFxuICAgICAgICAgIGljb246ICdzdWNjZXNzJyxcbiAgICAgICAgICBkdXJhdGlvbjogMTAwMFxuICAgICAgICB9KVxuICAgICAgICB3eC5uYXZpZ2F0ZUJhY2soe1xuICAgICAgICAgIGRlbHRhOiAxXG4gICAgICAgIH0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3eC5zaG93VG9hc3Qoe1xuICAgICAgICAgIHRpdGxlOiByZXMuZGF0YS5tc2csXG4gICAgICAgICAgaWNvbjogJ25vbmUnLFxuICAgICAgICAgIGR1cmF0aW9uOiAxMDAwXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcbiAgfSxcbn0pXG4iXX0=