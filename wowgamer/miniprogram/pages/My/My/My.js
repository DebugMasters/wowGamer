"use strict";
var app = getApp();
Page({
    data: {
        userId: '',
        userName: '',
        userImage: '',
        displayAddUser: false,
        displayAddUserInput: false,
        isLogin: true,
        accountList: [],
        newAccountName: ''
    },
    onLoad: function () {
        this.setData({
            userId: wx.getStorageSync('id')
        });
    },
    onShow: function () {
        var _this_1 = this;
        if (!this.data.userName || !this.data.userImage) {
            app.requestFunc('/user/getUserInfo', { userId: this.data.userId }, 'GET', function (res) {
                console.log(res.data);
                if (res.data.success == true) {
                    _this_1.setData({
                        userName: res.data.userInfo.userName,
                        userImage: res.data.userInfo.image
                    });
                }
            });
        }
    },
    displayAddUserFn: function () {
        var _this_1 = this;
        this.setData({
            displayAddUser: !this.data.displayAddUser
        });
        app.requestFunc('/user/getAccountList', { userId: this.data.userId }, 'GET', function (res) {
            console.log(res.data);
            if (res.data.success == true) {
                _this_1.setData({
                    accountList: res.data.accountList
                });
            }
        });
    },
    bindInputNewAccountName: function (e) {
        this.setData({
            newAccountName: e.detail.value
        });
    },
    saveNewAccount: function () {
        var _this_1 = this;
        app.requestFunc('/user/saveAccount', { userId: this.data.userId, accountName: this.data.newAccountName }, 'POST', function (res) {
            console.log(res.data);
            if (res.data.success == true) {
                console.log(res.data.msg);
                app.requestFunc('/user/getAccountList', { userId: _this_1.data.userId }, 'GET', function (res) {
                    console.log(res.data);
                    if (res.data.success == true) {
                        _this_1.setData({
                            accountList: res.data.accountList
                        });
                    }
                });
            }
        });
    },
    displayAddUserInputFn: function () {
        this.setData({
            displayAddUserInput: !this.data.displayAddUserInput
        });
    },
    navToMyInformation: function () {
        wx.navigateTo({
            url: '../MyInformation/MyInformation?id=' + this.data.userId,
            success: function (res) { },
            fail: function () { },
            complete: function () { }
        });
    },
    navToMyAccount: function (e) {
        wx.navigateTo({
            url: '../MyAccount/MyAccount?id=' + this.data.userId + '&accountId=' + e.currentTarget.dataset.accountid,
            success: function (res) { },
            fail: function () { },
            complete: function () { }
        });
    },
    navToAbout: function () {
    },
    deleteCurrentAcount: function (e) {
        var _this = this;
        wx.showModal({
            title: '提示',
            content: '删除子账号后,子账号下面的角色都将被自动删除~',
            success: function (res) {
                if (res.confirm) {
                    app.requestFunc('/user/deleteAccount', { userId: _this.data.userId, accountId: e.currentTarget.dataset.accountid }, 'POST', function (res) {
                        console.log(res.data);
                        if (res.data.success == true) {
                            console.log(res.data.msg);
                            wx.showToast({
                                title: res.data.msg,
                                icon: 'success',
                                duration: 2000
                            });
                            app.requestFunc('/user/getAccountList', { userId: _this.data.userId }, 'GET', function (res) {
                                console.log(res.data);
                                if (res.data.success == true) {
                                    _this.setData({
                                        accountList: res.data.accountList
                                    });
                                }
                            });
                        }
                    });
                }
                else if (res.cancel) {
                    console.log('用户点击取消');
                }
            }
        });
    }
});
//# sourceMappingURL=data:application/json;base64,